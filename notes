

gstreamer 1.0 errors
=========================================
(planeEtoiles:24165): GStreamer-CRITICAL **: gst_poll_write_control: assertion 'set != NULL' failed

(planeEtoiles:24165): GStreamer-CRITICAL **: gst_poll_read_control: assertion 'set != NULL' failed

(planeEtoiles:24165): GStreamer-CRITICAL **: gst_poll_read_control: assertion 'set != NULL' failed

(planeEtoiles:24165): GStreamer-CRITICAL **: gst_bus_create_watch: assertion 'bus->priv->poll != NULL' failed

(planeEtoiles:24165): GLib-CRITICAL **: g_source_set_callback: assertion 'source != NULL' failed
Segmentation fault (core dumped)























IMAGE SEQUENCE > VIDEO
=============================================

sudo gst-launch multifilesrc location=%05d.png caps="image/png, framerate=10/1" ! pngdec ! ffmpegcolorspace ! jpegenc ! avimux ! filesink location=video.avi sync=false



VIDEO > IMAGE SEQUENCE
==============================================
sudo gst-launch filesrc location=video.avi ! decodebin ! pngenc ! multifilesink location=video_%d.png
sudo gst-launch filesrc location=video.avi ! decodebin ! jpgenc ! multifilesink location=video_%d.jpg


LAUNCH VIDEO 
==============================================

gst-launch -v filesrc location=video.avi ! avidemux ! theoradec ! videoconvert ! videoscale ! ximagesink

gst-launch videotestsrc ! video/x-raw,format=I420,width=320,height=240,framerate=20/1 ! videocrop left=40 right=40 ! xvimagesink

gst-launch -v filesrc location=video.avi ! avidemux ! theoradec ! videoscale ! video/x-raw, width=50 ! xvimagesink

gst-launch -v filesrc location=video.avi ! decodebin ! videoscale ! video/x-raw-yuv,width=640 ! autovideosink


switcher -d &
switcher-ctrl -C uridecodebin video
switcher-ctrl -s video loop true
switcher-ctrl -i video to_shmdata 'path/to/the/file'



COPY FILES OVER SSH
==============================================
sudo scp planeviz@10.10.44.21:~/Documents/log/of_log/planeEtoiles_2014-01-28* ~/Documents/log/of_log/

















INSTALL BLOBSERVER AND DEPENDENCIES
===============================================

Blobserver installation howto:

In a terminal, type the following commands:

  sudo apt-get install help2man gettext automake bison build-essential flex libtool 
  sudo apt-get install libglib2.0-dev liblo0-dev
  sudo apt-get install liblcms2-dev libxml2-dev libtbb-dev
  sudo apt-get install libglib2.0-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev
  sudo apt-get install libjson-glib-dev liblo-dev
  sudo apt-get install libcgsi-gsoap-dev
  sudo apt-get install libgtk2.0-dev pkg-config python-dev
  
or all at once:
  sudo apt-get -y install help2man gettext automake bison build-essential flex libtool libglib2.0-dev liblo0-dev liblcms2-dev libxml2-dev libtbb-dev libglib2.0-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libjson-glib-dev liblo-dev libcgsi-gsoap-dev libgtk2.0-dev pkg-config python-dev
  

As a rule of thumb, we get source code in a dedicated directory:
  mkdir src
  cd src

We need to install libshmdata, which is used to read/write to shared memories:
  git clone git://code.sat.qc.ca/libshmdata.git
  cd libshmdata
  git checkout develop
  ./autogen.sh
  ./configure
  make -j4
  sudo make install
  cd ..

And we need switcher to access GiGE cameras through shared memories:
  git clone git://code.sat.qc.ca/switcher.git
  cd switcher
  git checkout develop
  ./autogen.sh
  ./configure
  make -j4
  sudo make install
  cd ..

We also need the latest version of OpenCV, which is not yet packaged for Ubuntu. So:
  git clone git://code.opencv.org/opencv.git
  cd opencv
  git checkout 2.4
  mkdir build
  cd build
  cmake -DCMAKE_BUILD_TYPE=Release -DWITH_TBB=ON ..
  make -j8
  sudo make install
  cd ../..

Atom dependency
  cd ~/src/
  git clone git://code.sat.qc.ca/libatom.git
  cd libatom
  git checkout develop
  ./autogen.sh
  ./configure
  make
  sudo make install
  

--> Aravis support (for GiGe cameras):
  sudo apt-get install intltool gobject-introspection gtk-doc-tools
  cd ..
  git clone git://git.gnome.org/aravis
  cd aravis
  ./autogen.sh
  ./configure --enable-gtk-doc-html --enable-gtk-doc --enable-viewer --enable-gst-plugin 
  make && sudo make install
  cd ../blobserver/

Then we can get and install blobserver:
  git clone git://code.sat.qc.ca/blobserver.git
  cd blobserver
  git checkout develop
  ./autogen.sh
  ./configure
  make -j4
  sudo make install
  sudo ldconfig

And that's it, you should now be able to run blobserver and blobtrainer. To try it, just run:
  blobserver